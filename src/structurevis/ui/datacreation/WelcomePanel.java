/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StructurePanel.java
 *
 * Created on 03 Dec 2011, 6:06:17 PM
 */
package structurevis.ui.datacreation;

import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.MissingResourceException;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import structurevis.ui.MainApp;
import structurevis.ui.datacreation.wizard.Wizard;

/**
 *
 * @author Michael Golden
 */
public class WelcomePanel extends javax.swing.JPanel implements HyperlinkListener, KeyListener {

    ImageIcon errorIcon = new ImageIcon(getClass().getResource("/structurevis/resources/error.png"));
    ImageIcon correctIcon = new ImageIcon(getClass().getResource("/structurevis/resources/correct.png"));
    DataModel dataModel;
    

    Desktop desktop = null;

    /** Creates new form StructurePanel */
    public WelcomePanel(DataModel dataModel) {
        this.dataModel = dataModel;
        initComponents();

        String fileName = dataModel.getNextFileName(MainApp.defaultWorkspace.getAbsolutePath(), "UntitledProject");
        projectNameField.addKeyListener(this);
        projectNameField.setText(fileName);
        projectLocationField.setText(MainApp.defaultWorkspace.getAbsolutePath());
        dataModel.projectDirectory = new File(MainApp.defaultWorkspace.getAbsolutePath() + File.separatorChar + fileName);
        projectDirectoryField.setText(dataModel.projectDirectory.getAbsolutePath());

        try {

            PropertyResourceBundle resources = (PropertyResourceBundle) ResourceBundle.getBundle("structurevis.ui.datacreation.text");
            //jTextArea1.set
            jTextPane1.setText(resources.getString("WELCOME_DESCRIPTION"));

        } catch (MissingResourceException mre) {
            // resource missing
        }
        
        if(Desktop.isDesktopSupported())
        {
            desktop = Desktop.getDesktop();
        }

        jTextPane1.addHyperlinkListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        projectLocationField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        projectNameField = new javax.swing.JTextField();
        projectDirectoryField = new javax.swing.JTextField();
        errorLabel = new javax.swing.JLabel();

        jTextPane1.setContentType("text/html");
        jTextPane1.setEditable(false);
        jTextPane1.setPreferredSize(new java.awt.Dimension(640, 6));
        jScrollPane1.setViewportView(jTextPane1);

        jLabel1.setText("Project name:");

        jLabel2.setText("Project location:");

        jLabel3.setText("Project directory:");

        projectLocationField.setEditable(false);

        browseButton.setText("Browse...");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        projectNameField.setText("UntitledProject");

        projectDirectoryField.setEditable(false);

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(projectDirectoryField, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                            .addComponent(projectLocationField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                            .addComponent(projectNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                            .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(browseButton))
                    .addComponent(jLabel3))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(projectNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseButton)
                    .addComponent(projectLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(projectDirectoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void updateFields() {
        dataModel.projectDirectory = new File(projectLocationField.getText() + "\\" + projectNameField.getText() + "\\");
        projectDirectoryField.setText(dataModel.projectDirectory.getAbsolutePath());

        this.errorLabel.setIcon(errorIcon);
        if (projectNameField.getText().length() < 1) {
            this.errorLabel.setText("Please enter a project name.");
            WizardMain.wizard.setNextFinishButtonEnabled(false);
        } else if (dataModel.projectDirectory.exists()) {
            this.errorLabel.setText("A project with this name already exists in this location. Choose a different project name.");
            WizardMain.wizard.setNextFinishButtonEnabled(false);
        } else {
            this.errorLabel.setText(" ");
            this.errorLabel.setIcon(null);
            WizardMain.wizard.setNextFinishButtonEnabled(true);
        }
    }

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        if (new File(projectLocationField.getText()).exists()) {
            Wizard.fileChooserOpen.setSelectedFile(new File(projectLocationField.getText()));
        }
        Wizard.fileChooserOpen.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = Wizard.fileChooserOpen.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            projectLocationField.setText(Wizard.fileChooserOpen.getSelectedFile().getAbsolutePath());
            updateFields();
        }
        Wizard.fileChooserOpen.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    }//GEN-LAST:event_browseButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField projectDirectoryField;
    private javax.swing.JTextField projectLocationField;
    private javax.swing.JTextField projectNameField;
    // End of variables declaration//GEN-END:variables

    public void keyTyped(KeyEvent e) {
    }

    public void keyPressed(KeyEvent e) {
    }

    public void keyReleased(KeyEvent e) {
        updateFields();
    }

    public void hyperlinkUpdate(HyperlinkEvent e) {
        if(e.getEventType() == HyperlinkEvent.EventType.ACTIVATED && desktop != null)
        {
            try {
                desktop.browse(e.getURL().toURI());
            }
            catch(IOException ex)
            {
                System.err.println("WARNING: Desktop not supported.");
            }
            catch (URISyntaxException ex) {
                Logger.getLogger(WelcomePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
